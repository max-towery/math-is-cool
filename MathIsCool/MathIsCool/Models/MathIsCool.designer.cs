#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MathIsCool.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="math_is_cool2")]
	public partial class MathIsCoolDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void InsertUser1(User1 instance);
    partial void UpdateUser1(User1 instance);
    partial void DeleteUser1(User1 instance);
    partial void InsertUserClaim(UserClaim instance);
    partial void UpdateUserClaim(UserClaim instance);
    partial void DeleteUserClaim(UserClaim instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void Insertcalendar(calendar instance);
    partial void Updatecalendar(calendar instance);
    partial void Deletecalendar(calendar instance);
    partial void Insertcomp_level(comp_level instance);
    partial void Updatecomp_level(comp_level instance);
    partial void Deletecomp_level(comp_level instance);
    partial void Insertcomp_location(comp_location instance);
    partial void Updatecomp_location(comp_location instance);
    partial void Deletecomp_location(comp_location instance);
    partial void Insertfaq(faq instance);
    partial void Updatefaq(faq instance);
    partial void Deletefaq(faq instance);
    partial void Insertinvoice(invoice instance);
    partial void Updateinvoice(invoice instance);
    partial void Deleteinvoice(invoice instance);
    partial void Insertline_item(line_item instance);
    partial void Updateline_item(line_item instance);
    partial void Deleteline_item(line_item instance);
    partial void Insertmath_level(math_level instance);
    partial void Updatemath_level(math_level instance);
    partial void Deletemath_level(math_level instance);
    partial void InsertnewsItem(newsItem instance);
    partial void UpdatenewsItem(newsItem instance);
    partial void DeletenewsItem(newsItem instance);
    partial void Insertpermission(permission instance);
    partial void Updatepermission(permission instance);
    partial void Deletepermission(permission instance);
    partial void Insertregion(region instance);
    partial void Updateregion(region instance);
    partial void Deleteregion(region instance);
    partial void Insertregistration(registration instance);
    partial void Updateregistration(registration instance);
    partial void Deleteregistration(registration instance);
    partial void Insertregistration_type(registration_type instance);
    partial void Updateregistration_type(registration_type instance);
    partial void Deleteregistration_type(registration_type instance);
    partial void Insertsample(sample instance);
    partial void Updatesample(sample instance);
    partial void Deletesample(sample instance);
    partial void Insertschool(school instance);
    partial void Updateschool(school instance);
    partial void Deleteschool(school instance);
    partial void Insertsku(sku instance);
    partial void Updatesku(sku instance);
    partial void Deletesku(sku instance);
    partial void Insertstatus(status instance);
    partial void Updatestatus(status instance);
    partial void Deletestatus(status instance);
    partial void Insertstudent(student instance);
    partial void Updatestudent(student instance);
    partial void Deletestudent(student instance);
    partial void Insertteam(team instance);
    partial void Updateteam(team instance);
    partial void Deleteteam(team instance);
    partial void Insertaddress(address instance);
    partial void Updateaddress(address instance);
    partial void Deleteaddress(address instance);
    partial void Insertcompetition(competition instance);
    partial void Updatecompetition(competition instance);
    partial void Deletecompetition(competition instance);
    #endregion
		
		public MathIsCoolDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["math_is_cool2ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MathIsCoolDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MathIsCoolDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MathIsCoolDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MathIsCoolDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<User1> User1s
		{
			get
			{
				return this.GetTable<User1>();
			}
		}
		
		public System.Data.Linq.Table<UserClaim> UserClaims
		{
			get
			{
				return this.GetTable<UserClaim>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRoles
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<calendar> calendars
		{
			get
			{
				return this.GetTable<calendar>();
			}
		}
		
		public System.Data.Linq.Table<comp_level> comp_levels
		{
			get
			{
				return this.GetTable<comp_level>();
			}
		}
		
		public System.Data.Linq.Table<comp_location> comp_locations
		{
			get
			{
				return this.GetTable<comp_location>();
			}
		}
		
		public System.Data.Linq.Table<faq> faqs
		{
			get
			{
				return this.GetTable<faq>();
			}
		}
		
		public System.Data.Linq.Table<invoice> invoices
		{
			get
			{
				return this.GetTable<invoice>();
			}
		}
		
		public System.Data.Linq.Table<line_item> line_items
		{
			get
			{
				return this.GetTable<line_item>();
			}
		}
		
		public System.Data.Linq.Table<math_level> math_levels
		{
			get
			{
				return this.GetTable<math_level>();
			}
		}
		
		public System.Data.Linq.Table<newsItem> newsItems
		{
			get
			{
				return this.GetTable<newsItem>();
			}
		}
		
		public System.Data.Linq.Table<permission> permissions
		{
			get
			{
				return this.GetTable<permission>();
			}
		}
		
		public System.Data.Linq.Table<region> regions
		{
			get
			{
				return this.GetTable<region>();
			}
		}
		
		public System.Data.Linq.Table<registration> registrations
		{
			get
			{
				return this.GetTable<registration>();
			}
		}
		
		public System.Data.Linq.Table<registration_type> registration_types
		{
			get
			{
				return this.GetTable<registration_type>();
			}
		}
		
		public System.Data.Linq.Table<sample> samples
		{
			get
			{
				return this.GetTable<sample>();
			}
		}
		
		public System.Data.Linq.Table<school> schools
		{
			get
			{
				return this.GetTable<school>();
			}
		}
		
		public System.Data.Linq.Table<sku> skus
		{
			get
			{
				return this.GetTable<sku>();
			}
		}
		
		public System.Data.Linq.Table<static_page> static_pages
		{
			get
			{
				return this.GetTable<static_page>();
			}
		}
		
		public System.Data.Linq.Table<status> status
		{
			get
			{
				return this.GetTable<status>();
			}
		}
		
		public System.Data.Linq.Table<student> students
		{
			get
			{
				return this.GetTable<student>();
			}
		}
		
		public System.Data.Linq.Table<team> teams
		{
			get
			{
				return this.GetTable<team>();
			}
		}
		
		public System.Data.Linq.Table<schools> schools1
		{
			get
			{
				return this.GetTable<schools>();
			}
		}
		
		public System.Data.Linq.Table<location> locations
		{
			get
			{
				return this.GetTable<location>();
			}
		}
		
		public System.Data.Linq.Table<users> users1
		{
			get
			{
				return this.GetTable<users>();
			}
		}
		
		public System.Data.Linq.Table<roles> roles1
		{
			get
			{
				return this.GetTable<roles>();
			}
		}
		
		public System.Data.Linq.Table<statuses> statuses
		{
			get
			{
				return this.GetTable<statuses>();
			}
		}
		
		public System.Data.Linq.Table<compLevels> compLevels
		{
			get
			{
				return this.GetTable<compLevels>();
			}
		}
		
		public System.Data.Linq.Table<RegistrationView> RegistrationViews
		{
			get
			{
				return this.GetTable<RegistrationView>();
			}
		}
		
		public System.Data.Linq.Table<address> addresses
		{
			get
			{
				return this.GetTable<address>();
			}
		}
		
		public System.Data.Linq.Table<competition> competitions
		{
			get
			{
				return this.GetTable<competition>();
			}
		}
		
		public System.Data.Linq.Table<competitions> competitions1
		{
			get
			{
				return this.GetTable<competitions>();
			}
		}
		
		public System.Data.Linq.Table<CalendarCompetition> CalendarCompetitions
		{
			get
			{
				return this.GetTable<CalendarCompetition>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleID;
		
		private string _Name;
		
		private EntitySet<UserRole> _UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_UserRoles", ThisKey="RoleID", OtherKey="RoleId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _user_id;
		
		private System.Guid _perm_id;
		
		private System.Guid _address_id;
		
		private string _user_name;
		
		private string _passkey;
		
		private string _email;
		
		private string _fname;
		
		private string _lname;
		
		private System.DateTime _last_login;
		
		private System.Nullable<System.DateTime> _last_reg;
		
		private bool _email_confirmed;
		
		private string _security_stamp;
		
		private string _discriminator;
		
		private System.Nullable<bool> _isConfirmed;
		
		private EntitySet<invoice> _invoices;
		
		private EntityRef<permission> _permission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Guid value);
    partial void Onuser_idChanged();
    partial void Onperm_idChanging(System.Guid value);
    partial void Onperm_idChanged();
    partial void Onaddress_idChanging(System.Guid value);
    partial void Onaddress_idChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void OnpasskeyChanging(string value);
    partial void OnpasskeyChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void Onlast_loginChanging(System.DateTime value);
    partial void Onlast_loginChanged();
    partial void Onlast_regChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_regChanged();
    partial void Onemail_confirmedChanging(bool value);
    partial void Onemail_confirmedChanged();
    partial void Onsecurity_stampChanging(string value);
    partial void Onsecurity_stampChanged();
    partial void OndiscriminatorChanging(string value);
    partial void OndiscriminatorChanged();
    partial void OnisConfirmedChanging(System.Nullable<bool> value);
    partial void OnisConfirmedChanged();
    #endregion
		
		public user()
		{
			this._invoices = new EntitySet<invoice>(new Action<invoice>(this.attach_invoices), new Action<invoice>(this.detach_invoices));
			this._permission = default(EntityRef<permission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_perm_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid perm_id
		{
			get
			{
				return this._perm_id;
			}
			set
			{
				if ((this._perm_id != value))
				{
					if (this._permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onperm_idChanging(value);
					this.SendPropertyChanging();
					this._perm_id = value;
					this.SendPropertyChanged("perm_id");
					this.Onperm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passkey", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string passkey
		{
			get
			{
				return this._passkey;
			}
			set
			{
				if ((this._passkey != value))
				{
					this.OnpasskeyChanging(value);
					this.SendPropertyChanging();
					this._passkey = value;
					this.SendPropertyChanged("passkey");
					this.OnpasskeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_login", DbType="DateTime NOT NULL")]
		public System.DateTime last_login
		{
			get
			{
				return this._last_login;
			}
			set
			{
				if ((this._last_login != value))
				{
					this.Onlast_loginChanging(value);
					this.SendPropertyChanging();
					this._last_login = value;
					this.SendPropertyChanged("last_login");
					this.Onlast_loginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_reg", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_reg
		{
			get
			{
				return this._last_reg;
			}
			set
			{
				if ((this._last_reg != value))
				{
					this.Onlast_regChanging(value);
					this.SendPropertyChanging();
					this._last_reg = value;
					this.SendPropertyChanged("last_reg");
					this.Onlast_regChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_confirmed", DbType="Bit NOT NULL")]
		public bool email_confirmed
		{
			get
			{
				return this._email_confirmed;
			}
			set
			{
				if ((this._email_confirmed != value))
				{
					this.Onemail_confirmedChanging(value);
					this.SendPropertyChanging();
					this._email_confirmed = value;
					this.SendPropertyChanged("email_confirmed");
					this.Onemail_confirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security_stamp", DbType="NVarChar(MAX)")]
		public string security_stamp
		{
			get
			{
				return this._security_stamp;
			}
			set
			{
				if ((this._security_stamp != value))
				{
					this.Onsecurity_stampChanging(value);
					this.SendPropertyChanging();
					this._security_stamp = value;
					this.SendPropertyChanged("security_stamp");
					this.Onsecurity_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discriminator", DbType="NVarChar(MAX)")]
		public string discriminator
		{
			get
			{
				return this._discriminator;
			}
			set
			{
				if ((this._discriminator != value))
				{
					this.OndiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._discriminator = value;
					this.SendPropertyChanged("discriminator");
					this.OndiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isConfirmed", DbType="Bit")]
		public System.Nullable<bool> isConfirmed
		{
			get
			{
				return this._isConfirmed;
			}
			set
			{
				if ((this._isConfirmed != value))
				{
					this.OnisConfirmedChanging(value);
					this.SendPropertyChanging();
					this._isConfirmed = value;
					this.SendPropertyChanged("isConfirmed");
					this.OnisConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_invoice", Storage="_invoices", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<invoice> invoices
		{
			get
			{
				return this._invoices;
			}
			set
			{
				this._invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_user", Storage="_permission", ThisKey="perm_id", OtherKey="perm_id", IsForeignKey=true)]
		public permission permission
		{
			get
			{
				return this._permission.Entity;
			}
			set
			{
				permission previousValue = this._permission.Entity;
				if (((previousValue != value) 
							|| (this._permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._permission.Entity = null;
						previousValue.users.Remove(this);
					}
					this._permission.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._perm_id = value.perm_id;
					}
					else
					{
						this._perm_id = default(System.Guid);
					}
					this.SendPropertyChanged("permission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_invoices(invoice entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private string _AddressID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private EntitySet<UserClaim> _UserClaims;
		
		private EntitySet<UserLogin> _UserLogins;
		
		private EntitySet<UserRole> _UserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnAddressIDChanging(string value);
    partial void OnAddressIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    #endregion
		
		public User1()
		{
			this._UserClaims = new EntitySet<UserClaim>(new Action<UserClaim>(this.attach_UserClaims), new Action<UserClaim>(this.detach_UserClaims));
			this._UserLogins = new EntitySet<UserLogin>(new Action<UserLogin>(this.attach_UserLogins), new Action<UserLogin>(this.detach_UserLogins));
			this._UserRoles = new EntitySet<UserRole>(new Action<UserRole>(this.attach_UserRoles), new Action<UserRole>(this.detach_UserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="NVarChar(MAX)")]
		public string AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User1_UserClaim", Storage="_UserClaims", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<UserClaim> UserClaims
		{
			get
			{
				return this._UserClaims;
			}
			set
			{
				this._UserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User1_UserLogin", Storage="_UserLogins", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<UserLogin> UserLogins
		{
			get
			{
				return this._UserLogins;
			}
			set
			{
				this._UserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User1_UserRole", Storage="_UserRoles", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<UserRole> UserRoles
		{
			get
			{
				return this._UserRoles;
			}
			set
			{
				this._UserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserClaims(UserClaim entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UserClaims(UserClaim entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UserLogins(UserLogin entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_UserRoles(UserRole entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserClaim")]
	public partial class UserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<User1> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public UserClaim()
		{
			this._User1 = default(EntityRef<User1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User1_UserClaim", Storage="_User1", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User1 User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User1 previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UserClaims.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UserClaims.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<User1> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public UserLogin()
		{
			this._User1 = default(EntityRef<User1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User1_UserLogin", Storage="_User1", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User1 User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User1 previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UserLogins.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UserLogins.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<User1> _User1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public UserRole()
		{
			this._Role = default(EntityRef<Role>);
			this._User1 = default(EntityRef<User1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_UserRole", Storage="_Role", ThisKey="RoleId", OtherKey="RoleID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._RoleId = value.RoleID;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User1_UserRole", Storage="_User1", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User1 User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User1 previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.UserRoles.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.UserRoles.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.calendar")]
	public partial class calendar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _cal_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _event;
		
		private System.Nullable<int> _min_priv;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncal_idChanging(string value);
    partial void Oncal_idChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void OneventChanging(string value);
    partial void OneventChanged();
    partial void Onmin_privChanging(System.Nullable<int> value);
    partial void Onmin_privChanged();
    #endregion
		
		public calendar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cal_id", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cal_id
		{
			get
			{
				return this._cal_id;
			}
			set
			{
				if ((this._cal_id != value))
				{
					this.Oncal_idChanging(value);
					this.SendPropertyChanging();
					this._cal_id = value;
					this.SendPropertyChanged("cal_id");
					this.Oncal_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="event", Storage="_event", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string @event
		{
			get
			{
				return this._event;
			}
			set
			{
				if ((this._event != value))
				{
					this.OneventChanging(value);
					this.SendPropertyChanging();
					this._event = value;
					this.SendPropertyChanged("@event");
					this.OneventChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_min_priv", DbType="Int")]
		public System.Nullable<int> min_priv
		{
			get
			{
				return this._min_priv;
			}
			set
			{
				if ((this._min_priv != value))
				{
					this.Onmin_privChanging(value);
					this.SendPropertyChanging();
					this._min_priv = value;
					this.SendPropertyChanged("min_priv");
					this.Onmin_privChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.comp_level")]
	public partial class comp_level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _value;
		
		private EntitySet<sample> _samples;
		
		private EntitySet<competition> _competitions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public comp_level()
		{
			this._samples = new EntitySet<sample>(new Action<sample>(this.attach_samples), new Action<sample>(this.detach_samples));
			this._competitions = new EntitySet<competition>(new Action<competition>(this.attach_competitions), new Action<competition>(this.detach_competitions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(15)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comp_level_sample", Storage="_samples", ThisKey="id", OtherKey="comp_level")]
		public EntitySet<sample> samples
		{
			get
			{
				return this._samples;
			}
			set
			{
				this._samples.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comp_level_competition", Storage="_competitions", ThisKey="id", OtherKey="level_id")]
		public EntitySet<competition> competitions
		{
			get
			{
				return this._competitions;
			}
			set
			{
				this._competitions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_samples(sample entity)
		{
			this.SendPropertyChanging();
			entity.comp_level1 = this;
		}
		
		private void detach_samples(sample entity)
		{
			this.SendPropertyChanging();
			entity.comp_level1 = null;
		}
		
		private void attach_competitions(competition entity)
		{
			this.SendPropertyChanging();
			entity.comp_level = this;
		}
		
		private void detach_competitions(competition entity)
		{
			this.SendPropertyChanging();
			entity.comp_level = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.comp_location")]
	public partial class comp_location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _comp_loc_id;
		
		private System.Guid _address_id;
		
		private string _map_url;
		
		private System.Nullable<System.Guid> _region_id;
		
		private string _name;
		
		private EntitySet<competition> _competitions;
		
		private EntityRef<address> _address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncomp_loc_idChanging(System.Guid value);
    partial void Oncomp_loc_idChanged();
    partial void Onaddress_idChanging(System.Guid value);
    partial void Onaddress_idChanged();
    partial void Onmap_urlChanging(string value);
    partial void Onmap_urlChanged();
    partial void Onregion_idChanging(System.Nullable<System.Guid> value);
    partial void Onregion_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public comp_location()
		{
			this._competitions = new EntitySet<competition>(new Action<competition>(this.attach_competitions), new Action<competition>(this.detach_competitions));
			this._address = default(EntityRef<address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_loc_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid comp_loc_id
		{
			get
			{
				return this._comp_loc_id;
			}
			set
			{
				if ((this._comp_loc_id != value))
				{
					this.Oncomp_loc_idChanging(value);
					this.SendPropertyChanging();
					this._comp_loc_id = value;
					this.SendPropertyChanged("comp_loc_id");
					this.Oncomp_loc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_map_url", DbType="NVarChar(MAX)")]
		public string map_url
		{
			get
			{
				return this._map_url;
			}
			set
			{
				if ((this._map_url != value))
				{
					this.Onmap_urlChanging(value);
					this.SendPropertyChanging();
					this._map_url = value;
					this.SendPropertyChanged("map_url");
					this.Onmap_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					this.Onregion_idChanging(value);
					this.SendPropertyChanging();
					this._region_id = value;
					this.SendPropertyChanged("region_id");
					this.Onregion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comp_location_competition", Storage="_competitions", ThisKey="comp_loc_id", OtherKey="comp_loc_id")]
		public EntitySet<competition> competitions
		{
			get
			{
				return this._competitions;
			}
			set
			{
				this._competitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_comp_location", Storage="_address", ThisKey="address_id", OtherKey="address_id", IsForeignKey=true)]
		public address address
		{
			get
			{
				return this._address.Entity;
			}
			set
			{
				address previousValue = this._address.Entity;
				if (((previousValue != value) 
							|| (this._address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address.Entity = null;
						previousValue.comp_locations.Remove(this);
					}
					this._address.Entity = value;
					if ((value != null))
					{
						value.comp_locations.Add(this);
						this._address_id = value.address_id;
					}
					else
					{
						this._address_id = default(System.Guid);
					}
					this.SendPropertyChanged("address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_competitions(competition entity)
		{
			this.SendPropertyChanging();
			entity.comp_location = this;
		}
		
		private void detach_competitions(competition entity)
		{
			this.SendPropertyChanging();
			entity.comp_location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.faq")]
	public partial class faq : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _faq_id;
		
		private int _level;
		
		private string _question;
		
		private string _answer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfaq_idChanging(System.Guid value);
    partial void Onfaq_idChanged();
    partial void OnlevelChanging(int value);
    partial void OnlevelChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    #endregion
		
		public faq()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_faq_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid faq_id
		{
			get
			{
				return this._faq_id;
			}
			set
			{
				if ((this._faq_id != value))
				{
					this.Onfaq_idChanging(value);
					this.SendPropertyChanging();
					this._faq_id = value;
					this.SendPropertyChanged("faq_id");
					this.Onfaq_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="Int NOT NULL")]
		public int level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this.OnlevelChanging(value);
					this.SendPropertyChanging();
					this._level = value;
					this.SendPropertyChanged("level");
					this.OnlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.invoice")]
	public partial class invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _invoice_id;
		
		private decimal _payment;
		
		private double _value;
		
		private System.DateTime _payment_date;
		
		private string _description;
		
		private System.Guid _user_id;
		
		private EntitySet<line_item> _line_items;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oninvoice_idChanging(System.Guid value);
    partial void Oninvoice_idChanged();
    partial void OnpaymentChanging(decimal value);
    partial void OnpaymentChanged();
    partial void OnvalueChanging(double value);
    partial void OnvalueChanged();
    partial void Onpayment_dateChanging(System.DateTime value);
    partial void Onpayment_dateChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onuser_idChanging(System.Guid value);
    partial void Onuser_idChanged();
    #endregion
		
		public invoice()
		{
			this._line_items = new EntitySet<line_item>(new Action<line_item>(this.attach_line_items), new Action<line_item>(this.detach_line_items));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment", DbType="Decimal(18,0) NOT NULL")]
		public decimal payment
		{
			get
			{
				return this._payment;
			}
			set
			{
				if ((this._payment != value))
				{
					this.OnpaymentChanging(value);
					this.SendPropertyChanging();
					this._payment = value;
					this.SendPropertyChanged("payment");
					this.OnpaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Float NOT NULL")]
		public double value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_date", DbType="DateTime NOT NULL")]
		public System.DateTime payment_date
		{
			get
			{
				return this._payment_date;
			}
			set
			{
				if ((this._payment_date != value))
				{
					this.Onpayment_dateChanging(value);
					this.SendPropertyChanging();
					this._payment_date = value;
					this.SendPropertyChanged("payment_date");
					this.Onpayment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invoice_line_item", Storage="_line_items", ThisKey="invoice_id", OtherKey="invoice_id")]
		public EntitySet<line_item> line_items
		{
			get
			{
				return this._line_items;
			}
			set
			{
				this._line_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_invoice", Storage="_user", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.invoices.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.invoices.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(System.Guid);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_line_items(line_item entity)
		{
			this.SendPropertyChanging();
			entity.invoice = this;
		}
		
		private void detach_line_items(line_item entity)
		{
			this.SendPropertyChanging();
			entity.invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.line_item")]
	public partial class line_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _line_item_id;
		
		private System.Guid _invoice_id;
		
		private System.Guid _sku_id;
		
		private int _quantity;
		
		private EntitySet<registration> _registrations;
		
		private EntityRef<invoice> _invoice;
		
		private EntityRef<sku> _sku;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Online_item_idChanging(System.Guid value);
    partial void Online_item_idChanged();
    partial void Oninvoice_idChanging(System.Guid value);
    partial void Oninvoice_idChanged();
    partial void Onsku_idChanging(System.Guid value);
    partial void Onsku_idChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    #endregion
		
		public line_item()
		{
			this._registrations = new EntitySet<registration>(new Action<registration>(this.attach_registrations), new Action<registration>(this.detach_registrations));
			this._invoice = default(EntityRef<invoice>);
			this._sku = default(EntityRef<sku>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line_item_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid line_item_id
		{
			get
			{
				return this._line_item_id;
			}
			set
			{
				if ((this._line_item_id != value))
				{
					this.Online_item_idChanging(value);
					this.SendPropertyChanging();
					this._line_item_id = value;
					this.SendPropertyChanged("line_item_id");
					this.Online_item_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sku_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid sku_id
		{
			get
			{
				return this._sku_id;
			}
			set
			{
				if ((this._sku_id != value))
				{
					if (this._sku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsku_idChanging(value);
					this.SendPropertyChanging();
					this._sku_id = value;
					this.SendPropertyChanged("sku_id");
					this.Onsku_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="line_item_registration", Storage="_registrations", ThisKey="line_item_id", OtherKey="line_item_id")]
		public EntitySet<registration> registrations
		{
			get
			{
				return this._registrations;
			}
			set
			{
				this._registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="invoice_line_item", Storage="_invoice", ThisKey="invoice_id", OtherKey="invoice_id", IsForeignKey=true)]
		public invoice invoice
		{
			get
			{
				return this._invoice.Entity;
			}
			set
			{
				invoice previousValue = this._invoice.Entity;
				if (((previousValue != value) 
							|| (this._invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._invoice.Entity = null;
						previousValue.line_items.Remove(this);
					}
					this._invoice.Entity = value;
					if ((value != null))
					{
						value.line_items.Add(this);
						this._invoice_id = value.invoice_id;
					}
					else
					{
						this._invoice_id = default(System.Guid);
					}
					this.SendPropertyChanged("invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sku_line_item", Storage="_sku", ThisKey="sku_id", OtherKey="sku_id", IsForeignKey=true)]
		public sku sku
		{
			get
			{
				return this._sku.Entity;
			}
			set
			{
				sku previousValue = this._sku.Entity;
				if (((previousValue != value) 
							|| (this._sku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._sku.Entity = null;
						previousValue.line_items.Remove(this);
					}
					this._sku.Entity = value;
					if ((value != null))
					{
						value.line_items.Add(this);
						this._sku_id = value.sku_id;
					}
					else
					{
						this._sku_id = default(System.Guid);
					}
					this.SendPropertyChanged("sku");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registrations(registration entity)
		{
			this.SendPropertyChanging();
			entity.line_item = this;
		}
		
		private void detach_registrations(registration entity)
		{
			this.SendPropertyChanging();
			entity.line_item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.math_level")]
	public partial class math_level : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public math_level()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(50)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.newsItem")]
	public partial class newsItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _news_id;
		
		private int _priority;
		
		private string _news_content;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onnews_idChanging(System.Guid value);
    partial void Onnews_idChanged();
    partial void OnpriorityChanging(int value);
    partial void OnpriorityChanged();
    partial void Onnews_contentChanging(string value);
    partial void Onnews_contentChanged();
    #endregion
		
		public newsItem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_news_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid news_id
		{
			get
			{
				return this._news_id;
			}
			set
			{
				if ((this._news_id != value))
				{
					this.Onnews_idChanging(value);
					this.SendPropertyChanging();
					this._news_id = value;
					this.SendPropertyChanged("news_id");
					this.Onnews_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priority", DbType="Int NOT NULL")]
		public int priority
		{
			get
			{
				return this._priority;
			}
			set
			{
				if ((this._priority != value))
				{
					this.OnpriorityChanging(value);
					this.SendPropertyChanging();
					this._priority = value;
					this.SendPropertyChanged("priority");
					this.OnpriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_news_content", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string news_content
		{
			get
			{
				return this._news_content;
			}
			set
			{
				if ((this._news_content != value))
				{
					this.Onnews_contentChanging(value);
					this.SendPropertyChanging();
					this._news_content = value;
					this.SendPropertyChanged("news_content");
					this.Onnews_contentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.permissions")]
	public partial class permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _perm_id;
		
		private string _security;
		
		private string _name;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onperm_idChanging(System.Guid value);
    partial void Onperm_idChanged();
    partial void OnsecurityChanging(string value);
    partial void OnsecurityChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public permission()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_perm_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid perm_id
		{
			get
			{
				return this._perm_id;
			}
			set
			{
				if ((this._perm_id != value))
				{
					this.Onperm_idChanging(value);
					this.SendPropertyChanging();
					this._perm_id = value;
					this.SendPropertyChanged("perm_id");
					this.Onperm_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_security", DbType="NVarChar(1) NOT NULL", CanBeNull=false)]
		public string security
		{
			get
			{
				return this._security;
			}
			set
			{
				if ((this._security != value))
				{
					this.OnsecurityChanging(value);
					this.SendPropertyChanging();
					this._security = value;
					this.SendPropertyChanged("security");
					this.OnsecurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="permission_user", Storage="_users", ThisKey="perm_id", OtherKey="perm_id")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.permission = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.region")]
	public partial class region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _region_id;
		
		private System.Guid _user_id;
		
		private string _region_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onregion_idChanging(System.Guid value);
    partial void Onregion_idChanged();
    partial void Onuser_idChanging(System.Guid value);
    partial void Onuser_idChanged();
    partial void Onregion_nameChanging(string value);
    partial void Onregion_nameChanged();
    #endregion
		
		public region()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					this.Onregion_idChanging(value);
					this.SendPropertyChanging();
					this._region_id = value;
					this.SendPropertyChanged("region_id");
					this.Onregion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string region_name
		{
			get
			{
				return this._region_name;
			}
			set
			{
				if ((this._region_name != value))
				{
					this.Onregion_nameChanging(value);
					this.SendPropertyChanging();
					this._region_name = value;
					this.SendPropertyChanged("region_name");
					this.Onregion_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.registration")]
	public partial class registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _reg_id;
		
		private System.Guid _comp_id;
		
		private System.Guid _user_id;
		
		private System.Guid _school_id;
		
		private System.Guid _line_item_id;
		
		private int _comp_level;
		
		private int _registration_type;
		
		private int _num_teams;
		
		private string _coach_name;
		
		private System.Nullable<int> _is_paid;
		
		private EntitySet<team> _teams;
		
		private EntityRef<line_item> _line_item;
		
		private EntityRef<registration_type> _registration_type1;
		
		private EntityRef<school> _school;
		
		private EntityRef<competition> _competition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onreg_idChanging(System.Guid value);
    partial void Onreg_idChanged();
    partial void Oncomp_idChanging(System.Guid value);
    partial void Oncomp_idChanged();
    partial void Onuser_idChanging(System.Guid value);
    partial void Onuser_idChanged();
    partial void Onschool_idChanging(System.Guid value);
    partial void Onschool_idChanged();
    partial void Online_item_idChanging(System.Guid value);
    partial void Online_item_idChanged();
    partial void Oncomp_levelChanging(int value);
    partial void Oncomp_levelChanged();
    partial void Onregistration_typeChanging(int value);
    partial void Onregistration_typeChanged();
    partial void Onnum_teamsChanging(int value);
    partial void Onnum_teamsChanged();
    partial void Oncoach_nameChanging(string value);
    partial void Oncoach_nameChanged();
    partial void Onis_paidChanging(System.Nullable<int> value);
    partial void Onis_paidChanged();
    #endregion
		
		public registration()
		{
			this._teams = new EntitySet<team>(new Action<team>(this.attach_teams), new Action<team>(this.detach_teams));
			this._line_item = default(EntityRef<line_item>);
			this._registration_type1 = default(EntityRef<registration_type>);
			this._school = default(EntityRef<school>);
			this._competition = default(EntityRef<competition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid reg_id
		{
			get
			{
				return this._reg_id;
			}
			set
			{
				if ((this._reg_id != value))
				{
					this.Onreg_idChanging(value);
					this.SendPropertyChanging();
					this._reg_id = value;
					this.SendPropertyChanged("reg_id");
					this.Onreg_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid comp_id
		{
			get
			{
				return this._comp_id;
			}
			set
			{
				if ((this._comp_id != value))
				{
					if (this._competition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncomp_idChanging(value);
					this.SendPropertyChanging();
					this._comp_id = value;
					this.SendPropertyChanged("comp_id");
					this.Oncomp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid school_id
		{
			get
			{
				return this._school_id;
			}
			set
			{
				if ((this._school_id != value))
				{
					if (this._school.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onschool_idChanging(value);
					this.SendPropertyChanging();
					this._school_id = value;
					this.SendPropertyChanged("school_id");
					this.Onschool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_line_item_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid line_item_id
		{
			get
			{
				return this._line_item_id;
			}
			set
			{
				if ((this._line_item_id != value))
				{
					if (this._line_item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Online_item_idChanging(value);
					this.SendPropertyChanging();
					this._line_item_id = value;
					this.SendPropertyChanged("line_item_id");
					this.Online_item_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_level", DbType="Int NOT NULL")]
		public int comp_level
		{
			get
			{
				return this._comp_level;
			}
			set
			{
				if ((this._comp_level != value))
				{
					this.Oncomp_levelChanging(value);
					this.SendPropertyChanging();
					this._comp_level = value;
					this.SendPropertyChanged("comp_level");
					this.Oncomp_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registration_type", DbType="Int NOT NULL")]
		public int registration_type
		{
			get
			{
				return this._registration_type;
			}
			set
			{
				if ((this._registration_type != value))
				{
					if (this._registration_type1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onregistration_typeChanging(value);
					this.SendPropertyChanging();
					this._registration_type = value;
					this.SendPropertyChanged("registration_type");
					this.Onregistration_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_teams", DbType="Int NOT NULL")]
		public int num_teams
		{
			get
			{
				return this._num_teams;
			}
			set
			{
				if ((this._num_teams != value))
				{
					this.Onnum_teamsChanging(value);
					this.SendPropertyChanging();
					this._num_teams = value;
					this.SendPropertyChanged("num_teams");
					this.Onnum_teamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coach_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string coach_name
		{
			get
			{
				return this._coach_name;
			}
			set
			{
				if ((this._coach_name != value))
				{
					this.Oncoach_nameChanging(value);
					this.SendPropertyChanging();
					this._coach_name = value;
					this.SendPropertyChanged("coach_name");
					this.Oncoach_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_paid", DbType="Int")]
		public System.Nullable<int> is_paid
		{
			get
			{
				return this._is_paid;
			}
			set
			{
				if ((this._is_paid != value))
				{
					this.Onis_paidChanging(value);
					this.SendPropertyChanging();
					this._is_paid = value;
					this.SendPropertyChanged("is_paid");
					this.Onis_paidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registration_team", Storage="_teams", ThisKey="reg_id", OtherKey="reg_id")]
		public EntitySet<team> teams
		{
			get
			{
				return this._teams;
			}
			set
			{
				this._teams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="line_item_registration", Storage="_line_item", ThisKey="line_item_id", OtherKey="line_item_id", IsForeignKey=true)]
		public line_item line_item
		{
			get
			{
				return this._line_item.Entity;
			}
			set
			{
				line_item previousValue = this._line_item.Entity;
				if (((previousValue != value) 
							|| (this._line_item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._line_item.Entity = null;
						previousValue.registrations.Remove(this);
					}
					this._line_item.Entity = value;
					if ((value != null))
					{
						value.registrations.Add(this);
						this._line_item_id = value.line_item_id;
					}
					else
					{
						this._line_item_id = default(System.Guid);
					}
					this.SendPropertyChanged("line_item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registration_type_registration", Storage="_registration_type1", ThisKey="registration_type", OtherKey="id", IsForeignKey=true)]
		public registration_type registration_type1
		{
			get
			{
				return this._registration_type1.Entity;
			}
			set
			{
				registration_type previousValue = this._registration_type1.Entity;
				if (((previousValue != value) 
							|| (this._registration_type1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registration_type1.Entity = null;
						previousValue.registrations.Remove(this);
					}
					this._registration_type1.Entity = value;
					if ((value != null))
					{
						value.registrations.Add(this);
						this._registration_type = value.id;
					}
					else
					{
						this._registration_type = default(int);
					}
					this.SendPropertyChanged("registration_type1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_registration", Storage="_school", ThisKey="school_id", OtherKey="school_id", IsForeignKey=true)]
		public school school
		{
			get
			{
				return this._school.Entity;
			}
			set
			{
				school previousValue = this._school.Entity;
				if (((previousValue != value) 
							|| (this._school.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._school.Entity = null;
						previousValue.registrations.Remove(this);
					}
					this._school.Entity = value;
					if ((value != null))
					{
						value.registrations.Add(this);
						this._school_id = value.school_id;
					}
					else
					{
						this._school_id = default(System.Guid);
					}
					this.SendPropertyChanged("school");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="competition_registration", Storage="_competition", ThisKey="comp_id", OtherKey="comp_id", IsForeignKey=true)]
		public competition competition
		{
			get
			{
				return this._competition.Entity;
			}
			set
			{
				competition previousValue = this._competition.Entity;
				if (((previousValue != value) 
							|| (this._competition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._competition.Entity = null;
						previousValue.registrations.Remove(this);
					}
					this._competition.Entity = value;
					if ((value != null))
					{
						value.registrations.Add(this);
						this._comp_id = value.comp_id;
					}
					else
					{
						this._comp_id = default(System.Guid);
					}
					this.SendPropertyChanged("competition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_teams(team entity)
		{
			this.SendPropertyChanging();
			entity.registration = this;
		}
		
		private void detach_teams(team entity)
		{
			this.SendPropertyChanging();
			entity.registration = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.registration_type")]
	public partial class registration_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _value;
		
		private EntitySet<registration> _registrations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public registration_type()
		{
			this._registrations = new EntitySet<registration>(new Action<registration>(this.attach_registrations), new Action<registration>(this.detach_registrations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registration_type_registration", Storage="_registrations", ThisKey="id", OtherKey="registration_type")]
		public EntitySet<registration> registrations
		{
			get
			{
				return this._registrations;
			}
			set
			{
				this._registrations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registrations(registration entity)
		{
			this.SendPropertyChanging();
			entity.registration_type1 = this;
		}
		
		private void detach_registrations(registration entity)
		{
			this.SendPropertyChanging();
			entity.registration_type1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.samples")]
	public partial class sample : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _sample_id;
		
		private int _comp_level;
		
		private string _year;
		
		private string _test_url;
		
		private string _description;
		
		private EntityRef<comp_level> _comp_level1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsample_idChanging(System.Guid value);
    partial void Onsample_idChanged();
    partial void Oncomp_levelChanging(int value);
    partial void Oncomp_levelChanged();
    partial void OnyearChanging(string value);
    partial void OnyearChanged();
    partial void Ontest_urlChanging(string value);
    partial void Ontest_urlChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public sample()
		{
			this._comp_level1 = default(EntityRef<comp_level>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sample_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid sample_id
		{
			get
			{
				return this._sample_id;
			}
			set
			{
				if ((this._sample_id != value))
				{
					this.Onsample_idChanging(value);
					this.SendPropertyChanging();
					this._sample_id = value;
					this.SendPropertyChanged("sample_id");
					this.Onsample_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_level", DbType="Int NOT NULL")]
		public int comp_level
		{
			get
			{
				return this._comp_level;
			}
			set
			{
				if ((this._comp_level != value))
				{
					if (this._comp_level1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncomp_levelChanging(value);
					this.SendPropertyChanging();
					this._comp_level = value;
					this.SendPropertyChanged("comp_level");
					this.Oncomp_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_test_url", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string test_url
		{
			get
			{
				return this._test_url;
			}
			set
			{
				if ((this._test_url != value))
				{
					this.Ontest_urlChanging(value);
					this.SendPropertyChanging();
					this._test_url = value;
					this.SendPropertyChanged("test_url");
					this.Ontest_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comp_level_sample", Storage="_comp_level1", ThisKey="comp_level", OtherKey="id", IsForeignKey=true)]
		public comp_level comp_level1
		{
			get
			{
				return this._comp_level1.Entity;
			}
			set
			{
				comp_level previousValue = this._comp_level1.Entity;
				if (((previousValue != value) 
							|| (this._comp_level1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._comp_level1.Entity = null;
						previousValue.samples.Remove(this);
					}
					this._comp_level1.Entity = value;
					if ((value != null))
					{
						value.samples.Add(this);
						this._comp_level = value.id;
					}
					else
					{
						this._comp_level = default(int);
					}
					this.SendPropertyChanged("comp_level1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.school")]
	public partial class school : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _school_id;
		
		private System.Guid _address_id;
		
		private System.Guid _region_id;
		
		private string _name;
		
		private string _short_name;
		
		private int _division;
		
		private System.DateTime _last_reg;
		
		private byte _approved;
		
		private EntitySet<registration> _registrations;
		
		private EntityRef<address> _address;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onschool_idChanging(System.Guid value);
    partial void Onschool_idChanged();
    partial void Onaddress_idChanging(System.Guid value);
    partial void Onaddress_idChanged();
    partial void Onregion_idChanging(System.Guid value);
    partial void Onregion_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onshort_nameChanging(string value);
    partial void Onshort_nameChanged();
    partial void OndivisionChanging(int value);
    partial void OndivisionChanged();
    partial void Onlast_regChanging(System.DateTime value);
    partial void Onlast_regChanged();
    partial void OnapprovedChanging(byte value);
    partial void OnapprovedChanged();
    #endregion
		
		public school()
		{
			this._registrations = new EntitySet<registration>(new Action<registration>(this.attach_registrations), new Action<registration>(this.detach_registrations));
			this._address = default(EntityRef<address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid school_id
		{
			get
			{
				return this._school_id;
			}
			set
			{
				if ((this._school_id != value))
				{
					this.Onschool_idChanging(value);
					this.SendPropertyChanging();
					this._school_id = value;
					this.SendPropertyChanged("school_id");
					this.Onschool_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					if (this._address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					this.Onregion_idChanging(value);
					this.SendPropertyChanging();
					this._region_id = value;
					this.SendPropertyChanged("region_id");
					this.Onregion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string short_name
		{
			get
			{
				return this._short_name;
			}
			set
			{
				if ((this._short_name != value))
				{
					this.Onshort_nameChanging(value);
					this.SendPropertyChanging();
					this._short_name = value;
					this.SendPropertyChanged("short_name");
					this.Onshort_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_division", DbType="Int NOT NULL")]
		public int division
		{
			get
			{
				return this._division;
			}
			set
			{
				if ((this._division != value))
				{
					this.OndivisionChanging(value);
					this.SendPropertyChanging();
					this._division = value;
					this.SendPropertyChanged("division");
					this.OndivisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_reg", DbType="DateTime NOT NULL")]
		public System.DateTime last_reg
		{
			get
			{
				return this._last_reg;
			}
			set
			{
				if ((this._last_reg != value))
				{
					this.Onlast_regChanging(value);
					this.SendPropertyChanging();
					this._last_reg = value;
					this.SendPropertyChanged("last_reg");
					this.Onlast_regChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="TinyInt NOT NULL")]
		public byte approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="school_registration", Storage="_registrations", ThisKey="school_id", OtherKey="school_id")]
		public EntitySet<registration> registrations
		{
			get
			{
				return this._registrations;
			}
			set
			{
				this._registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_school", Storage="_address", ThisKey="address_id", OtherKey="address_id", IsForeignKey=true)]
		public address address
		{
			get
			{
				return this._address.Entity;
			}
			set
			{
				address previousValue = this._address.Entity;
				if (((previousValue != value) 
							|| (this._address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._address.Entity = null;
						previousValue.schools.Remove(this);
					}
					this._address.Entity = value;
					if ((value != null))
					{
						value.schools.Add(this);
						this._address_id = value.address_id;
					}
					else
					{
						this._address_id = default(System.Guid);
					}
					this.SendPropertyChanged("address");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registrations(registration entity)
		{
			this.SendPropertyChanging();
			entity.school = this;
		}
		
		private void detach_registrations(registration entity)
		{
			this.SendPropertyChanging();
			entity.school = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.sku")]
	public partial class sku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _sku_id;
		
		private double _price;
		
		private string _description;
		
		private EntitySet<line_item> _line_items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsku_idChanging(System.Guid value);
    partial void Onsku_idChanged();
    partial void OnpriceChanging(double value);
    partial void OnpriceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public sku()
		{
			this._line_items = new EntitySet<line_item>(new Action<line_item>(this.attach_line_items), new Action<line_item>(this.detach_line_items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sku_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid sku_id
		{
			get
			{
				return this._sku_id;
			}
			set
			{
				if ((this._sku_id != value))
				{
					this.Onsku_idChanging(value);
					this.SendPropertyChanging();
					this._sku_id = value;
					this.SendPropertyChanged("sku_id");
					this.Onsku_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float NOT NULL")]
		public double price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="sku_line_item", Storage="_line_items", ThisKey="sku_id", OtherKey="sku_id")]
		public EntitySet<line_item> line_items
		{
			get
			{
				return this._line_items;
			}
			set
			{
				this._line_items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_line_items(line_item entity)
		{
			this.SendPropertyChanging();
			entity.sku = this;
		}
		
		private void detach_line_items(line_item entity)
		{
			this.SendPropertyChanging();
			entity.sku = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.static_pages")]
	public partial class static_page
	{
		
		private string _type;
		
		private string _description;
		
		public static_page()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="NVarChar(50)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this._type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.status")]
	public partial class status : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _value;
		
		private EntitySet<competition> _competitions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    #endregion
		
		public status()
		{
			this._competitions = new EntitySet<competition>(new Action<competition>(this.attach_competitions), new Action<competition>(this.detach_competitions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_competition", Storage="_competitions", ThisKey="id", OtherKey="status_id")]
		public EntitySet<competition> competitions
		{
			get
			{
				return this._competitions;
			}
			set
			{
				this._competitions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_competitions(competition entity)
		{
			this.SendPropertyChanging();
			entity.status = this;
		}
		
		private void detach_competitions(competition entity)
		{
			this.SendPropertyChanging();
			entity.status = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.student")]
	public partial class student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _student_id;
		
		private string _fname;
		
		private string _lname;
		
		private int _student_level;
		
		private System.Nullable<int> _ind_num;
		
		private System.Nullable<System.Guid> _team_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstudent_idChanging(System.Guid value);
    partial void Onstudent_idChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void Onstudent_levelChanging(int value);
    partial void Onstudent_levelChanged();
    partial void Onind_numChanging(System.Nullable<int> value);
    partial void Onind_numChanged();
    partial void Onteam_idChanging(System.Nullable<System.Guid> value);
    partial void Onteam_idChanged();
    #endregion
		
		public student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_level", DbType="Int NOT NULL")]
		public int student_level
		{
			get
			{
				return this._student_level;
			}
			set
			{
				if ((this._student_level != value))
				{
					this.Onstudent_levelChanging(value);
					this.SendPropertyChanging();
					this._student_level = value;
					this.SendPropertyChanged("student_level");
					this.Onstudent_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ind_num", DbType="Int")]
		public System.Nullable<int> ind_num
		{
			get
			{
				return this._ind_num;
			}
			set
			{
				if ((this._ind_num != value))
				{
					this.Onind_numChanging(value);
					this.SendPropertyChanging();
					this._ind_num = value;
					this.SendPropertyChanged("ind_num");
					this.Onind_numChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> team_id
		{
			get
			{
				return this._team_id;
			}
			set
			{
				if ((this._team_id != value))
				{
					this.Onteam_idChanging(value);
					this.SendPropertyChanging();
					this._team_id = value;
					this.SendPropertyChanged("team_id");
					this.Onteam_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.team")]
	public partial class team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _team_id;
		
		private System.Nullable<System.Guid> _reg_id;
		
		private string _name;
		
		private EntityRef<registration> _registration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onteam_idChanging(System.Guid value);
    partial void Onteam_idChanged();
    partial void Onreg_idChanging(System.Nullable<System.Guid> value);
    partial void Onreg_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public team()
		{
			this._registration = default(EntityRef<registration>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid team_id
		{
			get
			{
				return this._team_id;
			}
			set
			{
				if ((this._team_id != value))
				{
					this.Onteam_idChanging(value);
					this.SendPropertyChanging();
					this._team_id = value;
					this.SendPropertyChanged("team_id");
					this.Onteam_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> reg_id
		{
			get
			{
				return this._reg_id;
			}
			set
			{
				if ((this._reg_id != value))
				{
					if (this._registration.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onreg_idChanging(value);
					this.SendPropertyChanging();
					this._reg_id = value;
					this.SendPropertyChanged("reg_id");
					this.Onreg_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="registration_team", Storage="_registration", ThisKey="reg_id", OtherKey="reg_id", IsForeignKey=true)]
		public registration registration
		{
			get
			{
				return this._registration.Entity;
			}
			set
			{
				registration previousValue = this._registration.Entity;
				if (((previousValue != value) 
							|| (this._registration.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._registration.Entity = null;
						previousValue.teams.Remove(this);
					}
					this._registration.Entity = value;
					if ((value != null))
					{
						value.teams.Add(this);
						this._reg_id = value.reg_id;
					}
					else
					{
						this._reg_id = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("registration");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.schools")]
	public partial class schools
	{
		
		private System.Guid _school_id;
		
		private System.Guid _address_id;
		
		private System.Guid _region_id;
		
		private string _name;
		
		private string _short_name;
		
		private System.DateTime _last_reg;
		
		private int _division;
		
		private byte _approved;
		
		public schools()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid school_id
		{
			get
			{
				return this._school_id;
			}
			set
			{
				if ((this._school_id != value))
				{
					this._school_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					this._address_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					this._region_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_short_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string short_name
		{
			get
			{
				return this._short_name;
			}
			set
			{
				if ((this._short_name != value))
				{
					this._short_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_reg", DbType="DateTime NOT NULL")]
		public System.DateTime last_reg
		{
			get
			{
				return this._last_reg;
			}
			set
			{
				if ((this._last_reg != value))
				{
					this._last_reg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_division", DbType="Int NOT NULL")]
		public int division
		{
			get
			{
				return this._division;
			}
			set
			{
				if ((this._division != value))
				{
					this._division = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="TinyInt NOT NULL")]
		public byte approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this._approved = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.locations")]
	public partial class location
	{
		
		private string _name;
		
		private string _street;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private string _region;
		
		private int _id;
		
		private System.Nullable<System.Guid> _region_id;
		
		private System.Guid _comp_loc_id;
		
		private System.Guid _address_id;
		
		public location()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="NVarChar(50)")]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this._street = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this._city = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(25)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="NVarChar(15)")]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this._zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this._region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					this._region_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_loc_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid comp_loc_id
		{
			get
			{
				return this._comp_loc_id;
			}
			set
			{
				if ((this._comp_loc_id != value))
				{
					this._comp_loc_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					this._address_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.users")]
	public partial class users
	{
		
		private string _UserID;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private string _UserName;
		
		private string _AddressID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Role;
		
		public users()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", DbType="NVarChar(MAX)")]
		public string AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this._AddressID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.roles")]
	public partial class roles
	{
		
		private string _RoleID;
		
		private string _Name;
		
		public roles()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this._RoleID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.statuses")]
	public partial class statuses
	{
		
		private int _id;
		
		private string _value;
		
		public statuses()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.compLevels")]
	public partial class compLevels
	{
		
		private int _id;
		
		private string _value;
		
		public compLevels()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(15)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.RegistrationView")]
	public partial class RegistrationView
	{
		
		private System.Guid _school_id;
		
		private string _coach_name;
		
		private int _num_teams;
		
		private System.Nullable<int> _is_paid;
		
		private int _registration_type;
		
		private int _comp_level;
		
		private System.Guid _user_id;
		
		private string _name;
		
		private System.Guid _comp_id;
		
		private System.Guid _reg_id;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _team_limit;
		
		private string _teamName;
		
		private int _student_level;
		
		private System.Nullable<int> _ind_num;
		
		private string _fname;
		
		private string _lname;
		
		private string _value;
		
		private System.Guid _student_id;
		
		private System.Nullable<System.Guid> _team_id;
		
		private string _status;
		
		private System.Nullable<int> _total_teams_allowed;
		
		private int _student_limit;
		
		public RegistrationView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid school_id
		{
			get
			{
				return this._school_id;
			}
			set
			{
				if ((this._school_id != value))
				{
					this._school_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coach_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string coach_name
		{
			get
			{
				return this._coach_name;
			}
			set
			{
				if ((this._coach_name != value))
				{
					this._coach_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num_teams", DbType="Int NOT NULL")]
		public int num_teams
		{
			get
			{
				return this._num_teams;
			}
			set
			{
				if ((this._num_teams != value))
				{
					this._num_teams = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_paid", DbType="Int")]
		public System.Nullable<int> is_paid
		{
			get
			{
				return this._is_paid;
			}
			set
			{
				if ((this._is_paid != value))
				{
					this._is_paid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_registration_type", DbType="Int NOT NULL")]
		public int registration_type
		{
			get
			{
				return this._registration_type;
			}
			set
			{
				if ((this._registration_type != value))
				{
					this._registration_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_level", DbType="Int NOT NULL")]
		public int comp_level
		{
			get
			{
				return this._comp_level;
			}
			set
			{
				if ((this._comp_level != value))
				{
					this._comp_level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this._user_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid comp_id
		{
			get
			{
				return this._comp_id;
			}
			set
			{
				if ((this._comp_id != value))
				{
					this._comp_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid reg_id
		{
			get
			{
				return this._reg_id;
			}
			set
			{
				if ((this._reg_id != value))
				{
					this._reg_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_limit", DbType="Int")]
		public System.Nullable<int> team_limit
		{
			get
			{
				return this._team_limit;
			}
			set
			{
				if ((this._team_limit != value))
				{
					this._team_limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_teamName", DbType="NVarChar(50)")]
		public string teamName
		{
			get
			{
				return this._teamName;
			}
			set
			{
				if ((this._teamName != value))
				{
					this._teamName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_level", DbType="Int NOT NULL")]
		public int student_level
		{
			get
			{
				return this._student_level;
			}
			set
			{
				if ((this._student_level != value))
				{
					this._student_level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ind_num", DbType="Int")]
		public System.Nullable<int> ind_num
		{
			get
			{
				return this._ind_num;
			}
			set
			{
				if ((this._ind_num != value))
				{
					this._ind_num = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this._fname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this._lname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(50)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this._value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this._student_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_id", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> team_id
		{
			get
			{
				return this._team_id;
			}
			set
			{
				if ((this._team_id != value))
				{
					this._team_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_teams_allowed", DbType="Int")]
		public System.Nullable<int> total_teams_allowed
		{
			get
			{
				return this._total_teams_allowed;
			}
			set
			{
				if ((this._total_teams_allowed != value))
				{
					this._total_teams_allowed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_limit", DbType="Int NOT NULL")]
		public int student_limit
		{
			get
			{
				return this._student_limit;
			}
			set
			{
				if ((this._student_limit != value))
				{
					this._student_limit = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.address")]
	public partial class address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _address_id;
		
		private string _street;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private string _phone;
		
		private string _extension;
		
		private EntitySet<comp_location> _comp_locations;
		
		private EntitySet<school> _schools;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onaddress_idChanging(System.Guid value);
    partial void Onaddress_idChanged();
    partial void OnstreetChanging(string value);
    partial void OnstreetChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnextensionChanging(string value);
    partial void OnextensionChanged();
    #endregion
		
		public address()
		{
			this._comp_locations = new EntitySet<comp_location>(new Action<comp_location>(this.attach_comp_locations), new Action<comp_location>(this.detach_comp_locations));
			this._schools = new EntitySet<school>(new Action<school>(this.attach_schools), new Action<school>(this.detach_schools));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					this.Onaddress_idChanging(value);
					this.SendPropertyChanging();
					this._address_id = value;
					this.SendPropertyChanged("address_id");
					this.Onaddress_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="NVarChar(50)")]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this.OnstreetChanging(value);
					this.SendPropertyChanging();
					this._street = value;
					this.SendPropertyChanged("street");
					this.OnstreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(25)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="NVarChar(15)")]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(25)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extension", DbType="NVarChar(15)")]
		public string extension
		{
			get
			{
				return this._extension;
			}
			set
			{
				if ((this._extension != value))
				{
					this.OnextensionChanging(value);
					this.SendPropertyChanging();
					this._extension = value;
					this.SendPropertyChanged("extension");
					this.OnextensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_comp_location", Storage="_comp_locations", ThisKey="address_id", OtherKey="address_id")]
		public EntitySet<comp_location> comp_locations
		{
			get
			{
				return this._comp_locations;
			}
			set
			{
				this._comp_locations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="address_school", Storage="_schools", ThisKey="address_id", OtherKey="address_id")]
		public EntitySet<school> schools
		{
			get
			{
				return this._schools;
			}
			set
			{
				this._schools.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_comp_locations(comp_location entity)
		{
			this.SendPropertyChanging();
			entity.address = this;
		}
		
		private void detach_comp_locations(comp_location entity)
		{
			this.SendPropertyChanging();
			entity.address = null;
		}
		
		private void attach_schools(school entity)
		{
			this.SendPropertyChanging();
			entity.address = this;
		}
		
		private void detach_schools(school entity)
		{
			this.SendPropertyChanging();
			entity.address = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.competition")]
	public partial class competition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Guid _comp_id;
		
		private int _level_id;
		
		private System.Guid _comp_loc_id;
		
		private System.Guid _region_id;
		
		private int _student_limit;
		
		private int _status_id;
		
		private string _schedule;
		
		private string _note;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<int> _team_limit;
		
		private string _name;
		
		private System.Nullable<int> _total_teams_allowed;
		
		private EntitySet<registration> _registrations;
		
		private EntityRef<comp_level> _comp_level;
		
		private EntityRef<comp_location> _comp_location;
		
		private EntityRef<status> _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncomp_idChanging(System.Guid value);
    partial void Oncomp_idChanged();
    partial void Onlevel_idChanging(int value);
    partial void Onlevel_idChanged();
    partial void Oncomp_loc_idChanging(System.Guid value);
    partial void Oncomp_loc_idChanged();
    partial void Onregion_idChanging(System.Guid value);
    partial void Onregion_idChanged();
    partial void Onstudent_limitChanging(int value);
    partial void Onstudent_limitChanged();
    partial void Onstatus_idChanging(int value);
    partial void Onstatus_idChanged();
    partial void OnscheduleChanging(string value);
    partial void OnscheduleChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Onteam_limitChanging(System.Nullable<int> value);
    partial void Onteam_limitChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Ontotal_teams_allowedChanging(System.Nullable<int> value);
    partial void Ontotal_teams_allowedChanged();
    #endregion
		
		public competition()
		{
			this._registrations = new EntitySet<registration>(new Action<registration>(this.attach_registrations), new Action<registration>(this.detach_registrations));
			this._comp_level = default(EntityRef<comp_level>);
			this._comp_location = default(EntityRef<comp_location>);
			this._status = default(EntityRef<status>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid comp_id
		{
			get
			{
				return this._comp_id;
			}
			set
			{
				if ((this._comp_id != value))
				{
					this.Oncomp_idChanging(value);
					this.SendPropertyChanging();
					this._comp_id = value;
					this.SendPropertyChanged("comp_id");
					this.Oncomp_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_level_id", DbType="Int NOT NULL")]
		public int level_id
		{
			get
			{
				return this._level_id;
			}
			set
			{
				if ((this._level_id != value))
				{
					if (this._comp_level.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlevel_idChanging(value);
					this.SendPropertyChanging();
					this._level_id = value;
					this.SendPropertyChanged("level_id");
					this.Onlevel_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_loc_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid comp_loc_id
		{
			get
			{
				return this._comp_loc_id;
			}
			set
			{
				if ((this._comp_loc_id != value))
				{
					if (this._comp_location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncomp_loc_idChanging(value);
					this.SendPropertyChanging();
					this._comp_loc_id = value;
					this.SendPropertyChanged("comp_loc_id");
					this.Oncomp_loc_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					this.Onregion_idChanging(value);
					this.SendPropertyChanging();
					this._region_id = value;
					this.SendPropertyChanged("region_id");
					this.Onregion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_limit", DbType="Int NOT NULL")]
		public int student_limit
		{
			get
			{
				return this._student_limit;
			}
			set
			{
				if ((this._student_limit != value))
				{
					this.Onstudent_limitChanging(value);
					this.SendPropertyChanging();
					this._student_limit = value;
					this.SendPropertyChanged("student_limit");
					this.Onstudent_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", DbType="Int NOT NULL")]
		public int status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					if (this._status.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstatus_idChanging(value);
					this.SendPropertyChanging();
					this._status_id = value;
					this.SendPropertyChanged("status_id");
					this.Onstatus_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string schedule
		{
			get
			{
				return this._schedule;
			}
			set
			{
				if ((this._schedule != value))
				{
					this.OnscheduleChanging(value);
					this.SendPropertyChanging();
					this._schedule = value;
					this.SendPropertyChanged("schedule");
					this.OnscheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_limit", DbType="Int")]
		public System.Nullable<int> team_limit
		{
			get
			{
				return this._team_limit;
			}
			set
			{
				if ((this._team_limit != value))
				{
					this.Onteam_limitChanging(value);
					this.SendPropertyChanging();
					this._team_limit = value;
					this.SendPropertyChanged("team_limit");
					this.Onteam_limitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_teams_allowed", DbType="Int")]
		public System.Nullable<int> total_teams_allowed
		{
			get
			{
				return this._total_teams_allowed;
			}
			set
			{
				if ((this._total_teams_allowed != value))
				{
					this.Ontotal_teams_allowedChanging(value);
					this.SendPropertyChanging();
					this._total_teams_allowed = value;
					this.SendPropertyChanged("total_teams_allowed");
					this.Ontotal_teams_allowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="competition_registration", Storage="_registrations", ThisKey="comp_id", OtherKey="comp_id")]
		public EntitySet<registration> registrations
		{
			get
			{
				return this._registrations;
			}
			set
			{
				this._registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comp_level_competition", Storage="_comp_level", ThisKey="level_id", OtherKey="id", IsForeignKey=true)]
		public comp_level comp_level
		{
			get
			{
				return this._comp_level.Entity;
			}
			set
			{
				comp_level previousValue = this._comp_level.Entity;
				if (((previousValue != value) 
							|| (this._comp_level.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._comp_level.Entity = null;
						previousValue.competitions.Remove(this);
					}
					this._comp_level.Entity = value;
					if ((value != null))
					{
						value.competitions.Add(this);
						this._level_id = value.id;
					}
					else
					{
						this._level_id = default(int);
					}
					this.SendPropertyChanged("comp_level");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="comp_location_competition", Storage="_comp_location", ThisKey="comp_loc_id", OtherKey="comp_loc_id", IsForeignKey=true)]
		public comp_location comp_location
		{
			get
			{
				return this._comp_location.Entity;
			}
			set
			{
				comp_location previousValue = this._comp_location.Entity;
				if (((previousValue != value) 
							|| (this._comp_location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._comp_location.Entity = null;
						previousValue.competitions.Remove(this);
					}
					this._comp_location.Entity = value;
					if ((value != null))
					{
						value.competitions.Add(this);
						this._comp_loc_id = value.comp_loc_id;
					}
					else
					{
						this._comp_loc_id = default(System.Guid);
					}
					this.SendPropertyChanged("comp_location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="status_competition", Storage="_status", ThisKey="status_id", OtherKey="id", IsForeignKey=true)]
		public status status
		{
			get
			{
				return this._status.Entity;
			}
			set
			{
				status previousValue = this._status.Entity;
				if (((previousValue != value) 
							|| (this._status.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._status.Entity = null;
						previousValue.competitions.Remove(this);
					}
					this._status.Entity = value;
					if ((value != null))
					{
						value.competitions.Add(this);
						this._status_id = value.id;
					}
					else
					{
						this._status_id = default(int);
					}
					this.SendPropertyChanged("status");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_registrations(registration entity)
		{
			this.SendPropertyChanging();
			entity.competition = this;
		}
		
		private void detach_registrations(registration entity)
		{
			this.SendPropertyChanging();
			entity.competition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.competitions")]
	public partial class competitions
	{
		
		private System.Nullable<int> _team_limit;
		
		private string _schedule;
		
		private string _note;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _status;
		
		private string _region;
		
		private string _level;
		
		private int _id;
		
		private System.Guid _comp_id;
		
		private int _level_id;
		
		private System.Guid _comp_loc_id;
		
		private System.Guid _region_id;
		
		private int _status_id;
		
		private string _name;
		
		private string _loc_name;
		
		private int _student_limit;
		
		private System.Nullable<int> _total_teams_allowed;
		
		private System.Guid _address_id;
		
		public competitions()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_limit", DbType="Int")]
		public System.Nullable<int> team_limit
		{
			get
			{
				return this._team_limit;
			}
			set
			{
				if ((this._team_limit != value))
				{
					this._team_limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string schedule
		{
			get
			{
				return this._schedule;
			}
			set
			{
				if ((this._schedule != value))
				{
					this._schedule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this._note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this._region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="NVarChar(15)")]
		public string level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this._level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid comp_id
		{
			get
			{
				return this._comp_id;
			}
			set
			{
				if ((this._comp_id != value))
				{
					this._comp_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_level_id", DbType="Int NOT NULL")]
		public int level_id
		{
			get
			{
				return this._level_id;
			}
			set
			{
				if ((this._level_id != value))
				{
					this._level_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_loc_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid comp_loc_id
		{
			get
			{
				return this._comp_loc_id;
			}
			set
			{
				if ((this._comp_loc_id != value))
				{
					this._comp_loc_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					this._region_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status_id", DbType="Int NOT NULL")]
		public int status_id
		{
			get
			{
				return this._status_id;
			}
			set
			{
				if ((this._status_id != value))
				{
					this._status_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loc_name", DbType="VarChar(50)")]
		public string loc_name
		{
			get
			{
				return this._loc_name;
			}
			set
			{
				if ((this._loc_name != value))
				{
					this._loc_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_limit", DbType="Int NOT NULL")]
		public int student_limit
		{
			get
			{
				return this._student_limit;
			}
			set
			{
				if ((this._student_limit != value))
				{
					this._student_limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_teams_allowed", DbType="Int")]
		public System.Nullable<int> total_teams_allowed
		{
			get
			{
				return this._total_teams_allowed;
			}
			set
			{
				if ((this._total_teams_allowed != value))
				{
					this._total_teams_allowed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address_id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid address_id
		{
			get
			{
				return this._address_id;
			}
			set
			{
				if ((this._address_id != value))
				{
					this._address_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="mathiscool.CalendarCompetitions")]
	public partial class CalendarCompetition
	{
		
		private string _level;
		
		private string _region_name;
		
		private string _street;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private System.Nullable<System.DateTime> _date;
		
		private string _schedule;
		
		private string _status;
		
		private string _comp_name;
		
		private string _loc_name;
		
		private System.Nullable<int> _team_limit;
		
		private int _stu_limit;
		
		private System.Nullable<int> _total_teams_allowed;
		
		private string _note;
		
		private string _phone;
		
		private string _extension;
		
		public CalendarCompetition()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[level]", Storage="_level", DbType="NVarChar(15)")]
		public string level
		{
			get
			{
				return this._level;
			}
			set
			{
				if ((this._level != value))
				{
					this._level = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string region_name
		{
			get
			{
				return this._region_name;
			}
			set
			{
				if ((this._region_name != value))
				{
					this._region_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street", DbType="NVarChar(50)")]
		public string street
		{
			get
			{
				return this._street;
			}
			set
			{
				if ((this._street != value))
				{
					this._street = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(50)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this._city = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(25)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="NVarChar(15)")]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this._zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this._date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string schedule
		{
			get
			{
				return this._schedule;
			}
			set
			{
				if ((this._schedule != value))
				{
					this._schedule = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comp_name", DbType="NVarChar(50)")]
		public string comp_name
		{
			get
			{
				return this._comp_name;
			}
			set
			{
				if ((this._comp_name != value))
				{
					this._comp_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loc_name", DbType="VarChar(50)")]
		public string loc_name
		{
			get
			{
				return this._loc_name;
			}
			set
			{
				if ((this._loc_name != value))
				{
					this._loc_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_team_limit", DbType="Int")]
		public System.Nullable<int> team_limit
		{
			get
			{
				return this._team_limit;
			}
			set
			{
				if ((this._team_limit != value))
				{
					this._team_limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_limit", DbType="Int NOT NULL")]
		public int stu_limit
		{
			get
			{
				return this._stu_limit;
			}
			set
			{
				if ((this._stu_limit != value))
				{
					this._stu_limit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_teams_allowed", DbType="Int")]
		public System.Nullable<int> total_teams_allowed
		{
			get
			{
				return this._total_teams_allowed;
			}
			set
			{
				if ((this._total_teams_allowed != value))
				{
					this._total_teams_allowed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this._note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(25)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this._phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extension", DbType="NVarChar(15)")]
		public string extension
		{
			get
			{
				return this._extension;
			}
			set
			{
				if ((this._extension != value))
				{
					this._extension = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
